// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int    @id @default(autoincrement())
  username     String @unique
  email        String @unique
  password     String
  tokenVersion Int    @default(0)

  matches1 Match[]    @relation("user1")
  matches2 Match[]    @relation("user2")
  units    Unit[]
  cards    Card[]
  Property Property[]
}

model Match {
  id    Int    @id @default(autoincrement())
  user1 User   @relation("user1", fields: [user1Id], references: [id])
  user2 User?  @relation("user2", fields: [user2Id], references: [id])
  turn  Int
  map   String

  user1Id Int
  user2Id Int?

  units    Unit[]
  cards    Card[]
  Property Property[]
}

model MovementType {
  id          Int    @id @default(autoincrement())
  name        String
  description String

  unitTypes UnitType[]
}

model UnitType {
  id                         Int          @id @default(autoincrement())
  name                       String
  code                       String
  description                String
  primaryPower               Float
  secondaryPower             Float
  maxAmmo                    Int
  movementType               MovementType @relation(fields: [movementTypeId], references: [id])
  attackRange                Int
  primaryWeaponName          String
  primaryWeaponDescription   String
  secondaryWeaponDescription String

  movementTypeId Int

  units Unit[]
  cards Card[]
}

model Unit {
  id       Int      @id @default(autoincrement())
  hp       Int      @default(10)
  ammo     Int
  battery  Int      @default(100)
  exp      Float    @default(0)
  position String
  type     UnitType @relation(fields: [typeId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
  match    Match    @relation(fields: [matchId], references: [id])

  typeId  Int
  userId  Int
  matchId Int
}

model Card {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  match    Match    @relation(fields: [matchId], references: [id])
  unitType UnitType @relation(fields: [unitTypeId], references: [id])

  userId     Int
  matchId    Int
  unitTypeId Int
}

model PropertyType {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  code        String

  property Property[]
}

model Property {
  id       Int          @id @default(autoincrement())
  type     PropertyType @relation(fields: [typeId], references: [id])
  user     User?        @relation(fields: [userId], references: [id])
  match    Match        @relation(fields: [matchId], references: [id])
  position String

  typeId  Int
  userId  Int?
  matchId Int
}

model TerrainType {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  defense     Int
  code        String
}
